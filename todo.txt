API Security Audit (May 2025)





8. /api/invoice/[transactionId]/route.ts
- Security: No authentication for GET.
- Issues: Anyone can fetch any invoice/transaction.
- Suggestions:
  * Require auth().
  * Only allow access if user is buyer or seller in transaction.
  * Support Bearer token/JWT.

9. /api/listings/[id]/delete-image/route.ts
- Security: No authentication.
- Issues: Anyone can delete images from any listing.
- Suggestions:
  * Require auth().
  * Only allow if user is owner of the listing.
  * Support Bearer token/JWT.

10. /api/auth/signup/route.ts
- Security: No authentication (expected for signup/OTP).
- Issues: None for signup, but ensure rate limiting to prevent abuse.
- Suggestions:
  * Add rate limiting.

11. /api/auth/[...nextauth]/route.ts
- Security: Handled by next-auth.
- Issues: None.
- Suggestions: N/A

General Recommendations:
- Use auth() in all routes that modify or access user data.
- Support Bearer token/JWT in Authorization header for stateless API access.
- Never trust userId/phone in body/query/params; always extract from session/JWT.
- Add CSRF protection for state-changing routes if using cookies.
- Add rate limiting to public endpoints (e.g., signup, estimate-shipping).

---
Fix each route as per the above suggestions for robust security.
